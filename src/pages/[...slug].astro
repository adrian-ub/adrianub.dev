---
import type { MarkdownInstance } from "astro";
import { getEntry } from "astro:content";

import BlogPost from "@/layouts/BlogPost.astro";
import Page from "@/layouts/Page.astro";
import { posts } from "@/lib/post";
import { pages } from "@/lib/page";

import { components } from "@/lib/components";

export async function getStaticPaths() {
  const postPaths = posts.map((post) => ({ params: { slug: post.slug } }));
  const pagePaths = pages.map((page) => ({ params: { slug: page.slug } }));
  return [...postPaths, ...pagePaths];
}

const { slug } = Astro.params;

if (slug === undefined) {
  throw new Error("Slug is required");
}

const entryPost = await getEntry("blog", slug);
const entryPage = await getEntry("pages", slug);

let ContentLayout: MarkdownInstance<{}>["Content"] | null = null;

if (entryPost) {
  const { Content } = await entryPost.render();
  ContentLayout = Content;
} else if (entryPage) {
  const { Content } = await entryPage.render();
  ContentLayout = Content;
}
---

{
  entryPost && (
    <BlogPost {...entryPost}>
      {ContentLayout && <ContentLayout {components} />}
    </BlogPost>
  )
}

{
  entryPage && (
    <Page {...entryPage}>
      {ContentLayout && <ContentLayout {components} />}
    </Page>
  )
}
