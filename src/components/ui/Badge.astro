---
import type { HTMLAttributes } from "astro/types";

import { cva, type VariantProps } from "class-variance-authority";

import { ub } from "@/utils/ub";

const badgeVariants = cva(
  ":uno: inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          ":uno: border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          ":uno: border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          ":uno: border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: ":uno: text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  },
);

export type Props = VariantProps<typeof badgeVariants> & HTMLAttributes<"div">;

const { class: className, variant, ...props } = Astro.props;
---

<div class={ub(badgeVariants({ variant }), className)} {...props}>
  <slot />
</div>
