<button class="select-none" title="Toggle Color Scheme" id="themeToggle">
  <div i-ri-sun-line dark:i-ri-moon-line></div>
</button>

<script is:inline>
  function swithTheme() {
    const themeToggleButton = document.getElementById("themeToggle");

    let isDark = {
      value: localStorage.getItem("theme") === "dark",
    };

    function toggleDark() {
      document.documentElement.classList.toggle("dark");
      isDark.value = !isDark.value;
      localStorage.setItem("theme", isDark.value ? "dark" : "light");
    }

    themeToggleButton?.addEventListener("click", function (event) {
      const x = event.clientX;
      const y = event.clientY;
      const endRadius = Math.hypot(
        Math.max(x, innerWidth - x),
        Math.max(y, innerHeight - y)
      );
      // @ts-expect-error: Transition API
      if (!document.startViewTransition) {
        toggleDark();
        return;
      }

      // @ts-expect-error: Transition API
      const transition = document.startViewTransition(async () => {
        toggleDark();
      });

      transition.ready.then(() => {
        const clipPath = [
          `circle(0px at ${x}px ${y}px)`,
          `circle(${endRadius}px at ${x}px ${y}px)`,
        ];
        document.documentElement.animate(
          {
            clipPath: isDark.value ? [...clipPath].reverse() : clipPath,
          },
          {
            duration: 400,
            easing: "ease-in",
            pseudoElement: isDark.value
              ? "::view-transition-old(root)"
              : "::view-transition-new(root)",
          }
        );
      });
    });
  }

  swithTheme();

  document.addEventListener("astro:after-swap", (ev) => {
    swithTheme();
  });
</script>
