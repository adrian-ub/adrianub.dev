---
import type { CollectionEntry } from 'astro:content'
import { formatDate } from '@/logics'

type Post = CollectionEntry<'posts'>

export type Props = {
  posts: CollectionEntry<'posts'>[]
}

const getYear = (a: Date | string | number) => new Date(a).getFullYear()
const isFuture = (a?: Date | string | number) => a && new Date(a) > new Date()
function isSameYear(a?: Date | string | number, b?: Date | string | number) {
  return a && b && getYear(a) === getYear(b)
}
function isSameGroup(a: Post, b?: Post) {
  return (
    isFuture(a.data.date) === isFuture(b?.data.date)
    && isSameYear(a.data.date, b?.data.date)
  )
}

function getGroupName(p: Post) {
  if (isFuture(p.data.date))
return 'Upcoming'
  return getYear(p.data.date)
}

function getReadingTime(p: Post) {
  return p.render().then(r => `${r.remarkPluginFrontmatter.minutesRead} min`)
}

const { posts } = Astro.props;
---

<ul>
  {
    !posts.length && (
      <div py2 op50>
        {'{ nothing here yet }'}
      </div>
    )
  }
  {
    posts.map(async (post, index) => (
      <>
        {!isSameGroup(post, posts[index - 1]) && (
          <div
            style={`--enter-stage: ${index} - 2; --enter-step:'60ms';`}
            select-none
            relative
            h20
            pointer-events-none
            slide-enter
          >
            <span
              text-8em
              color-transparent
              absolute
              left--3rem
              top--2rem
              font-bold
              text-stroke-2
              text-stroke-hex-aaa
              op10
            >
              {getGroupName(post)}
            </span>
          </div>
        )}
        <div
          style={`--enter-stage: ${index}; --enter-step:'60ms';`}
          class="slide-enter"
        >
          <a
            href={post.data.redirect ?? `/posts/${post.slug}`}
            target={post.data.redirect ? '_blank' : undefined}
            rel={post.data.redirect ? 'noopener noreferrer' : undefined}
            class="item mb-6 mt-2 block font-normal no-underline"
          >
            <li class="no-underline" flex="~ col md:row gap-2 md:items-center">
              <div class="title text-lg leading-1.2em" flex="~ gap-2 wrap">
                <span transition:name={`title${post.slug}`}>
                  {post.data.title}
                </span>
                {post.data.redirect && (
                  <span
                    align-middle
                    op50
                    flex-none
                    text-xs
                    ml--1.5
                    i-carbon-arrow-up-right
                  />
                )}
              </div>

              <div flex="~ gap-2 items-center">
                <span
                  text-sm
                  op50
                  ws-nowrap
                  transition:name={`date${post.slug}`}
                >
                  {formatDate(post.data.date, false)}
                </span>
                <span
                  text-sm
                  op40
                  ws-nowrap
                  transition:name={`min${post.slug}`}
                >
                  Â· {getReadingTime(post).then(r => r)}
                </span>
              </div>
            </li>
          </a>
        </div>
      </>
    ))
  }
</ul>
